include "global.tbh"

public dim tcp_header as string(4)

'--------------------------------------------------------------------
public function tcp_to_rtu(mb_str as string) as string	
' Convert from ModBUS TCP to ModBUS RTU.<br><br>
'<b>mb_str </b> is the modbus TCP packet that you are converting from.<br><br>

	dim tmp_str,result as string
	tcp_header=mid(mb_str,1,4)
	tmp_str=right(mb_str,len(mb_str)-6)
	result=tmp_str+get_crc(tmp_str)
	tcp_to_rtu=result
	
end function

'--------------------------------------------------------------------
public function tcp_to_ascii(mb_str as string) as string
' Convert from ModBUS TCP to ModBUS ASCII.<br><br>
'<b>mb_str </b> is the modbus TCP packet that you are converting from.<br><br>

	dim tmp_str,result as string
	dim i as integer
	tcp_header=mid(mb_str,1,4)
	tmp_str=right(mb_str,len(mb_str)-6)
	for i=1 to len(tmp_str)
		dim tmp_chr as string(4)
		dim tmp_string as string(2)
		tmp_chr=mid(tmp_str,i,1)
		tmp_chr=hex(asc(tmp_chr))
		tmp_chr=right(tmp_chr,len(tmp_chr)-2)
		while len(tmp_chr)<2
			tmp_chr="0"+tmp_chr
		wend
		result=result+tmp_chr
	next i
	result=":"+result+get_lrc(result)+chr(&H0D)+chr(&H0A)
	tcp_to_ascii=result
	
end function

'--------------------------------------------------------------------
function rtu_to_tcp(mb_str as string) as string
' Convert from ModBUS RTU to ModBUS TCP.<br><br>
'<b>mb_str </b> is the modbus RTU packet that you are converting from.<br><br>


	dim tmp_str,result as string
	dim lenth_field as string(2)
	dim len1,len2 as byte
	dim i as byte
	tmp_str=left(mb_str,len(mb_str)-2)
	len1=len(tmp_str)/256
	len2=len(tmp_str) 'mod 256
	lenth_field=chr(len1)+chr(len2)
	'result=chr(0)+chr(0)+chr(0)+chr(0)+lenth_field+tmp_str
	'header=transactio ID+protocol
	result=tcp_header+lenth_field+tmp_str
	rtu_to_tcp=result
end function

'--------------------------------------------------------------------
function rtu_to_ascii(mb_str as string) as string
' Convert from ModBUS RTU to ModBUS ASCII.<br><br>
'<b>mb_str </b> is the modbus RTU packet that you are converting from.<br><br>
	dim tmp_str,result as string
	dim i as byte
	tmp_str=left(mb_str,len(mb_str)-2)
	for i=1 to len(tmp_str)
		dim tmp_chr as string(4)
		dim tmp_string as string(2)
		tmp_chr=mid(tmp_str,i,1)
		tmp_chr=hex(asc(tmp_chr))
		tmp_chr=right(tmp_chr,len(tmp_chr)-2)
		while len(tmp_chr)<2
			tmp_chr="0"+tmp_chr
		wend
		result=result+tmp_chr
	next i
	result=":"+result+get_lrc(result)+chr(&H0D)+chr(&H0A)
	rtu_to_ascii=result
end function

'--------------------------------------------------------------------
function ascii_to_tcp(mb_str as string) as string
' Convert from ModBUS ASCII to ModBUS TCP.<br><br>
'<b>mb_str </b> is the modbus RTU packet that you are converting from.<br><br>

	dim tmp_str,result as string
	dim lenth_field as string(2)
	dim c,l,len1,len2 as byte
	tmp_str=mid(mb_str,2,len(mb_str)-5)
	c=0 
	l=Len(tmp_str)       
	For c=c + 1 To l 
		dim tmp_chr as string(1)
		dim tmp_string as string(2)
		tmp_string=mid(tmp_str, c, 2)
		tmp_chr=chr(val("&H"+tmp_string))
		result=result+tmp_chr
		c=c + 1 
	Next c 
	len1=len(result)/256
	len2=len(result) mod 256
	lenth_field=chr(len1)+chr(len2)
	result=tcp_header+lenth_field+result 
	ascii_to_tcp=result
end function

'--------------------------------------------------------------------
function ascii_to_rtu(mb_str as string) as string
' Convert from ModBUS ASCII to ModBUS RTU.<br><br>
'<b>mb_str </b> is the modbus RTU packet that you are converting from.<br><br>

	dim tmp_str,result as string
	dim c,l as byte
	tmp_str=mid(mb_str,2,len(mb_str)-5)
	c=0 
	l=Len(tmp_str)       
	For c=c + 1 To l 
		dim tmp_chr as string(1)
		dim tmp_string as string(2)
		tmp_string=mid(tmp_str, c, 2)
		tmp_chr=chr(val("&H"+tmp_string))
		result=result+tmp_chr
		c=c + 1
	Next c
	result=result+get_crc(result)
	ascii_to_rtu=result
end function

'--------------------------------------------------------------------
function hex_to_str(mb_str as string) as string
' Internal function used for HEX-to-string conversion of the embedded data in the ModBUS string

	dim tmp_str,result as string
	dim i as byte
	tmp_str=left(mb_str,len(mb_str)-2)
	for i=1 to len(tmp_str)
		dim tmp_chr as string(4)
		dim tmp_string as string(2)
		tmp_chr=mid(tmp_str,i,1)
		tmp_chr=hex(asc(tmp_chr))
		tmp_chr=right(tmp_chr,len(tmp_chr)-2)
		while len(tmp_chr)<2
			tmp_chr="0"+tmp_chr
		wend
		result=result+tmp_chr
	next i
	hex_to_str=result
end function

'--------------------------------------------------------------------
function get_lrc(input_str as string) as string(2)
'Internal function used for MODBUS LRC calculation, returns 2 bytes LRC string in ASCII

	dim c,l as byte
	dim c_data,h_lrc as string
	dim d_lrc as word
	c=0 
	d_lrc=0 'add
	l=len(input_str)       
	For c=c + 1 To l 
		c_data = mid(input_str, c, 2)       
		d_lrc=d_lrc + val("&H" + c_data) 
		c=c + 1 
	Next c 
	If d_lrc > &HFF Then 
		  d_lrc=d_lrc Mod 256
	End If 
	h_lrc=hex(val(&HFF - d_lrc + 1)) 
	If len(h_lrc) > 2 Then 
		  h_lrc=Mid(h_lrc, Len(h_lrc) - 1, 2) 
	End If 
	while len(h_lrc)<2
			h_lrc="0"+h_lrc 'stuff 0
	wend
	get_lrc=h_lrc 
end function

'--------------------------------------------------------------------
function get_crc(input_str as string) as string(2)
' Internal function used for MODBUS 16-bit CRC calaulation. <b>input_str </b> contains
' address(Unit ID) and PDU(Protocol Data Unit). Returns the caculated CRC

	dim i,j,msb,lsb,input_length as byte
	dim temp,carry_flag as word
	temp=CRC_INI
	input_length=len(input_str)
	for i=1 to input_length						'modbus CRC-16 calculation
		
		temp=temp XOR asc(mid(input_str,i,1))
		for j=0 to 7
			carry_flag=temp mod 2
			temp=temp / 2
			if carry_flag=1 then temp=temp XOR POLY		
		next j
	next i
	msb=temp/256
	lsb=temp mod 256
	get_crc=chr(lsb)+chr(msb)
end function
